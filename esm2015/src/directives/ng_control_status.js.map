{"version":3,"file":"ng_control_status.js","sourceRoot":"","sources":["../../../../../packages/forms/src/directives/ng_control_status.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,eAAe,CAAC;AAG9C,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,cAAc,CAAC;AAEvC,MAAM,OAAO,qBAAqB;;;;IAGhC,YAAY,EAA4B,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;;;;IAE5D,IAAI,gBAAgB,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IACjG,IAAI,cAAc,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IAC7F,IAAI,eAAe,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IAC/F,IAAI,YAAY,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IACzF,IAAI,YAAY,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IACzF,IAAI,cAAc,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;;IAC7F,IAAI,cAAc,KAAc,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;CAC9F;;;;;;AAED,aAAa,mBAAmB,GAAG;IACjC,sBAAsB,EAAE,kBAAkB;IAC1C,oBAAoB,EAAE,gBAAgB;IACtC,qBAAqB,EAAE,iBAAiB;IACxC,kBAAkB,EAAE,cAAc;IAClC,kBAAkB,EAAE,cAAc;IAClC,oBAAoB,EAAE,gBAAgB;IACtC,oBAAoB,EAAE,gBAAgB;CACvC,CAAC;;;;;;;;;;;;;;;;;;AAoBF,MAAM,OAAO,eAAgB,SAAQ,qBAAqB;;;;IACxD,YAAoB,EAAa,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;;;YAFlD,SAAS,SAAC,EAAC,QAAQ,EAAE,2CAA2C,EAAE,IAAI,EAAE,mBAAmB,EAAC;;;;YA3CrF,SAAS,uBA6CF,IAAI;;;;;;;;;;AAgBnB,MAAM,OAAO,oBAAqB,SAAQ,qBAAqB;;;;IAC7D,YAAoB,EAAoB,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;;;YANzD,SAAS,SAAC;gBACT,QAAQ,EACJ,0FAA0F;gBAC9F,IAAI,EAAE,mBAAmB;aAC1B;;;;YA7DO,gBAAgB,uBA+DT,IAAI","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\n\nexport class AbstractControlStatus {\n  private _cd: AbstractControlDirective;\n\n  constructor(cd: AbstractControlDirective) { this._cd = cd; }\n\n  get ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n  get ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n  get ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n  get ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n  get ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n  get ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n  get ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nexport const ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost})\nexport class NgControlStatus extends AbstractControlStatus {\n  constructor(@Self() cd: NgControl) { super(cd); }\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n})\nexport class NgControlStatusGroup extends AbstractControlStatus {\n  constructor(@Self() cd: ControlContainer) { super(cd); }\n}\n"]}