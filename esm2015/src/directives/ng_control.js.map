{"version":3,"file":"ng_control.js","sourceRoot":"","sources":["../../../../../packages/forms/src/directives/ng_control.ts"],"names":[],"mappings":";;;;;;;;;;;AASA,OAAO,EAAC,wBAAwB,EAAC,MAAM,8BAA8B,CAAC;;;;AAKtE,SAAS,aAAa;IACpB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;CAClC;;;;;;;;;AASD,MAAM,OAAgB,SAAU,SAAQ,wBAAwB;;;;;;;;;QAO9D,eAAiC,IAAI,CAAC;;;;;QAMtC,YAAoB,IAAI,CAAC;;;;;QAMzB,qBAA2C,IAAI,CAAC;;;;;;;QAQhD,sBAA+C,EAAE,CAAC;;;;;;;QAQlD,2BAA8D,EAAE,CAAC;;;;;;;;;IAQjE,IAAI,SAAS,KAAuB,yBAAoB,aAAa,EAAE,EAAC,EAAE;;;;;;;;IAQ1E,IAAI,cAAc,KAA4B,yBAAyB,aAAa,EAAE,EAAC,EAAE;CAS1F","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n\n/**\n * @description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nexport abstract class NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent: ControlContainer|null = null;\n\n  /**\n   * @description\n   * The name for the control\n   */\n  name: string|null = null;\n\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor: ControlValueAccessor|null = null;\n\n  /**\n   * @description\n   * The uncomposed array of synchronous validators for the control\n   *\n   * @internal\n   */\n  _rawValidators: Array<Validator|ValidatorFn> = [];\n\n  /**\n   * @description\n   * The uncomposed array of async validators for the control\n   *\n   * @internal\n   */\n  _rawAsyncValidators: Array<AsyncValidator|AsyncValidatorFn> = [];\n\n  /**\n   * @description\n   * The registered synchronous validator function for the control\n   *\n   * @throws An exception that this method is not implemented\n   */\n  get validator(): ValidatorFn|null { return <ValidatorFn>unimplemented(); }\n\n  /**\n   * @description\n   * The registered async validator function for the control\n   *\n   * @throws An exception that this method is not implemented\n   */\n  get asyncValidator(): AsyncValidatorFn|null { return <AsyncValidatorFn>unimplemented(); }\n\n  /**\n   * @description\n   * The callback method to update the model from the view when requested\n   *\n   * @param newValue The new value for the view\n   */\n  abstract viewToModelUpdate(newValue: any): void;\n}\n"]}