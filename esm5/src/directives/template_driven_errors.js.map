{"version":3,"file":"template_driven_errors.js","sourceRoot":"","sources":["../../../../../../packages/forms/src/directives/template_driven_errors.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,iBAAiB,IAAI,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAE/D,IAAA;;;;;;IACS,yCAAoB;;;IAA3B;QACE,MAAM,IAAI,KAAK,CAAC,iMAIZ,QAAQ,CAAC,eAAe,wJAMxB,QAAQ,CAAC,oBAAsB,CAAC,CAAC;KACtC;;;;IAEM,2CAAsB;;;IAA7B;QACE,MAAM,IAAI,KAAK,CAAC,8MAKZ,QAAQ,CAAC,aAAa,0GAItB,QAAQ,CAAC,YAAc,CAAC,CAAC;KAC9B;;;;IAEM,yCAAoB;;;IAA3B;QACE,MAAM,IAAI,KAAK,CACX,0UAIsF,CAAC,CAAC;KAC7F;;;;IAEM,8CAAyB;;;IAAhC;QACE,MAAM,IAAI,KAAK,CAAC,uKAKZ,QAAQ,CAAC,aAAa,4HAItB,QAAQ,CAAC,YAAc,CAAC,CAAC;KAC9B;;;;IAEM,kCAAa;;;IAApB;QACE,OAAO,CAAC,IAAI,CAAC,iTAaZ,CAAC,CAAC;KACJ;+BA3EH;IA4EC,CAAA;AAlED,gCAkEC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormErrorExamples as Examples} from './error_examples';\n\nexport class TemplateDrivenErrors {\n  static modelParentException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${Examples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${Examples.ngModelWithFormGroup}`);\n  }\n\n  static formGroupNameException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n\n  static missingNameException() {\n    throw new Error(\n        `If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n  }\n\n  static modelGroupParentException() {\n    throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n\n  static ngFormWarning() {\n    console.warn(`\n    It looks like you're using 'ngForm'.\n\n    Support for using the 'ngForm' element selector has been deprecated in Angular v6 and will be removed\n    in Angular v9.\n\n    Use 'ng-form' instead.\n\n    Before:\n    <ngForm #myForm=\"ngForm\">\n\n    After:\n    <ng-form #myForm=\"ngForm\">\n    `);\n  }\n}\n"]}