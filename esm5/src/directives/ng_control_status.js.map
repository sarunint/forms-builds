{"version":3,"file":"ng_control_status.js","sourceRoot":"","sources":["../../../../../../packages/forms/src/directives/ng_control_status.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAC,MAAM,eAAe,CAAC;AAG9C,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAC,SAAS,EAAC,MAAM,cAAc,CAAC;AAEvC,IAAA;IAGE,+BAAY,EAA4B;QAAI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;KAAE;IAE5D,sBAAI,mDAAgB;;;;QAApB,cAAkC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACjG,sBAAI,iDAAc;;;;QAAlB,cAAgC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IAC7F,sBAAI,kDAAe;;;;QAAnB,cAAiC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IAC/F,sBAAI,+CAAY;;;;QAAhB,cAA8B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACzF,sBAAI,+CAAY;;;;QAAhB,cAA8B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACzF,sBAAI,iDAAc;;;;QAAlB,cAAgC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IAC7F,sBAAI,iDAAc;;;;QAAlB,cAAgC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;gCAzB/F;IA0BC,CAAA;AAZD,iCAYC;;;;;;AAED,WAAa,mBAAmB,GAAG;IACjC,sBAAsB,EAAE,kBAAkB;IAC1C,oBAAoB,EAAE,gBAAgB;IACtC,qBAAqB,EAAE,iBAAiB;IACxC,kBAAkB,EAAE,cAAc;IAClC,kBAAkB,EAAE,cAAc;IAClC,oBAAoB,EAAE,gBAAgB;IACtC,oBAAoB,EAAE,gBAAgB;CACvC,CAAC;;;;;;;;;;;;;;;;;;;IAoBmC,2CAAqB;IACxD,yBAAoB,EAAa;eAAI,kBAAM,EAAE,CAAC;KAAG;;gBAFlD,SAAS,SAAC,EAAC,QAAQ,EAAE,2CAA2C,EAAE,IAAI,EAAE,mBAAmB,EAAC;;;;gBA3CrF,SAAS,uBA6CF,IAAI;;0BAzDnB;EAwDqC,qBAAqB;SAA7C,eAAe;;;;;;;;;;IAiBc,gDAAqB;IAC7D,8BAAoB,EAAoB;eAAI,kBAAM,EAAE,CAAC;KAAG;;gBANzD,SAAS,SAAC;oBACT,QAAQ,EACJ,0FAA0F;oBAC9F,IAAI,EAAE,mBAAmB;iBAC1B;;;;gBA7DO,gBAAgB,uBA+DT,IAAI;;+BA1EnB;EAyE0C,qBAAqB;SAAlD,oBAAoB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\n\nexport class AbstractControlStatus {\n  private _cd: AbstractControlDirective;\n\n  constructor(cd: AbstractControlDirective) { this._cd = cd; }\n\n  get ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n  get ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n  get ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n  get ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n  get ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n  get ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n  get ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nexport const ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost})\nexport class NgControlStatus extends AbstractControlStatus {\n  constructor(@Self() cd: NgControl) { super(cd); }\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\n@Directive({\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n})\nexport class NgControlStatusGroup extends AbstractControlStatus {\n  constructor(@Self() cd: ControlContainer) { super(cd); }\n}\n"]}